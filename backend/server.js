// backend/server.js
const express = require('express');
const cors = require('cors');
const nodemailer = require('nodemailer');
const dotenv = require('dotenv');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
dotenv.config();

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors()); // –†–∞–∑—Ä–µ—à–∞–µ–º CORS-–∑–∞–ø—Ä–æ—Å—ã —Å –ª—é–±–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π origin)
app.use(express.json({ limit: '10mb' })); // –ü–∞—Ä—Å–∏–º JSON –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–æ 10MB
app.use(express.urlencoded({ extended: true, limit: '10mb' })); // –ü–∞—Ä—Å–∏–º URL-encoded –¥–∞–Ω–Ω—ã–µ

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nodemailer ---
// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç transporter —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ SMTP
let transporter;
try {
    transporter = nodemailer.createTransport({
        host: process.env.SMTP_HOST,
        port: parseInt(process.env.SMTP_PORT, 10),
        secure: process.env.SMTP_SECURE === 'true', // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
        auth: {
            user: process.env.SMTP_USER, // –í–∞—à email
            pass: process.env.SMTP_PASS, // –í–∞—à –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        },
        tls: {
            // –ù–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–¥–ª—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö, –ù–ï —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
            rejectUnauthorized: false, 
        },
    });
} catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ transporter nodemailer:', error);
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å –æ—à–∏–±–∫–æ–π
}

// --- –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email ---
app.post('/send-email', async (req, res) => {
    console.log('–ü–æ–ª—É—á–µ–Ω POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /send-email:', req.body);

    const { name, email, phone, message } = req.body;

    // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è (–Ω–∞ –±—ç–∫–µ–Ω–¥–µ —Ç–æ–∂–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å!)
    if (!name || !email || !phone || !message) {
        console.error('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return res.status(400).json({ success: false, message: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.' });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ email –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å (–ø—Ä–æ—Å—Ç–∞—è)
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        console.error('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
        return res.status(400).json({ success: false, message: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email.' });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º HTML-—Ç–µ–ª–æ –ø–∏—Å—å–º–∞
    const mailOptions = {
        from: `"–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏" <${process.env.SMTP_USER}>`, // –û—Ç –∫–æ–≥–æ (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–µ –∏–º—è)
        to: process.env.EMAIL_TO, // –ö–æ–º—É (–≤–∞—à email)
        subject: `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ –æ—Ç ${name}`, // –¢–µ–º–∞ –ø–∏—Å—å–º–∞
        text: `–ò–º—è: ${name}\nEmail: ${email}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n–°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`, // –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ HTML –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        html: `
        <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
            <h2>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞</h2>
            <p><strong>–ò–º—è:</strong> ${name}</p>
            <p><strong>Email:</strong> <a href="mailto:${email}">${email}</a></p>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> <a href="tel:${phone}">${phone}</a></p>
            <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong></p>
            <blockquote style="border-left: 4px solid #ddd; padding-left: 1em; margin: 1em 0;">${message}</blockquote>
            <hr>
            <p style="font-size: 0.9em; color: #666;"><em>–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞ —Å–∞–π—Ç–µ transport-security-landing.</em></p>
        </div>
        `, // HTML-–≤–µ—Ä—Å–∏—è –ø–∏—Å—å–º–∞
    };

    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
        const info = await transporter.sendMail(mailOptions);
        console.log('‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', info.response);
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
        res.status(200).json({ success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!' });
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email:', error);
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ –∫–ª–∏–µ–Ω—Ç—É
        res.status(500).json({ success: false, message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.' });
    }
});

// --- –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ---
// –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –±—ç–∫–µ–Ω–¥ —Ç–∞–∫–∂–µ –æ—Ç–¥–∞–≤–∞–ª —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –ø–∞–ø–∫–∏ ../dist),
// —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏:
/*
const DIST_DIR = path.join(__dirname, '..', 'dist');
app.use(express.static(DIST_DIR));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è SPA)
app.get('*', (req, res) => {
    res.sendFile(path.join(DIST_DIR, 'index.html'));
});
*/

// --- –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
app.listen(PORT, '0.0.0.0', () => { // –°–ª—É—à–∞–µ–º –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö (0.0.0.0) –¥–ª—è Docker/–æ–±–ª–∞–∫–∞
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì¨ –ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ http://localhost:${PORT}/send-email`);
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...');
    process.exit(0);
});